openapi: 3.0.1
info:
  title: Emotiq Wallet interface
  version: 0.0.2
  description: emotiq-wallet
tags:
  - name: consensus
  - name: syncing
  - name: wallet
  - name: transaction
  - name: dictionary
paths:
  /consensus/:
    get:
      tags:
        - syncing
        - consensus
      summary: >-
        Returns information about current chain consensus with the connected
        node
      operationId: getConsensus
      responses:
        '200':
          description: Consensus information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consensus'
  /wallet/restore:
    post:
      tags:
        - wallet
      operationId: restoreWallet
      requestBody:
        description: Wallet phrase for restoring wallet
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  recoveryPhrase:
                    type: string
      responses:
        200:
          description: The address of the successfully created wallet
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
  /wallet/create:
    post:
      tags:
        - wallet
      summary: Create wallet
      operationId: createWallet
      requestBody:
         # For creating a wallet what type do we need?
      responses:
        200:
          description: Successful wallet creation
          content: 
            application/json:
              schema:
                type: object
                properties:
                  address:
                  type: string
  '/wallet/{walletAddress}/balance':
    get:
      tags:
        - wallet
      summary: Get balance for wallet address
      operationId: getWalletBalance
      produces:
        - application/json
      parameters:
        - name: walletAddress
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              amount:
                type: integer
        '400':
          description: Invalid status value
  '/wallet/{walletAddress}/transactions/':
    get:
      tags:
        - wallet
      summary: List wallet transactions
      operationId: getWalletTransactions
      parameters:
        - name: walletAddress
          in: path
          required: true
          type: string
        - name: limit
          in: query
          type: integer
        - name: offset
          in: query
          type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transaction'
          headers:
            X-Transactions-Count:
              type: integer
              description: count of wallet transactions
        '400':
          description: Invalid status value
  '/wallet/{walletAddress}/address':
    post:
      tags:
        - wallet
      summary: generate new address
      operationId: generateAddress
      produces:
        - application/json
      parameters:
        - name: walletAddress
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              address:
                type: string
        '400':
          description: Invalid status value
  '/wallet/{walletAddress}/address/all':
    get:
      tags:
        - wallet
      summary: get all addresses
      operationId: getAllAddresses
      produces:
        - application/json
      parameters:
        - name: walletAddress
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              type: string
        '400':
          description: Invalid status value
  '/wallet/{walletAddress}/address/status':
    get:
      tags:
        - wallet
      summary: Get wallet address status
      operationId: getAddressStatus
      produces:
        - application/json
      parameters:
        - name: walletAddress
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                  - USED
                  - UNUSED
        '400':
          description: Invalid status value
  '/wallet/{walletAddress}/transaction/':
    post:
      tags:
        - transaction
      summary: send EMTQ
      operationId: sendEMTQ
      produces:
        - application/json
      parameters:
        - name: walletAddress
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - addressTo
              - amount
            properties:
              addressTo:
                type: string
              amount:
                type: number
      responses:
        '200':
          description: successful operation
          schema:
            items:
              $ref: '#/components/schema/transaction'
        '400':
          description: Invalid status value
  /dictionary/:
    get:
      tags:
        - dictionary
      summary: Return available phrase dictionaries by language
      operationId: getDictionaries
      produces:
        - application/json
      responses:
        '200':
          schema:
            type: array
            items:
              type: string
        '400':
          description: Invalid status value
  '/dictionary/{language}':
    get:
      tags:
        - dictionary
      operationId: getDictionary
      parameters:
        - name: language
          in: path
          required: true
          type: string
      responses:
        '200':
          content:
            application/json:
              type: array
              items:
                type: string
  /dictionary/phrase:
    get:
      tags:
        - dictionary
      summary: Return mnemonic address for wallet
      description: used for wallet generation
      operationId: getPhrase
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              phrase:
                type: string
        '400':
          description: Invalid status value
components:
  schemas:
    transaction:
      type: object
      properties:
        id:
          type: string
      direction:
        type: string
        enum:
          - IN
          - OUT
      timestamp:
        type: integer
        format: int64
      amount:
        type: number
    consensus:
      type: object
      properties:
        epoch:
          type: integer
          description: The last sealed epoch
        synced:
          type: boolean
          description: Whether the connected node is synced with the chain
