openapi:  3.0.1
info:
  title: Emotiq Wallet interface
  version: 0.0.3
tags:
  - name: consensus
  - name: wallet
  - name: transaction
  - name: dictionary
paths:
# MUST implement  
  /consensus/:
    
    get:
      summary: >-
        Returns information about current chain consensus with the connected
        node
      tags:
        - consensus
      responses:
        '200':
          description: The consensus information for the connected node
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consensus'
# MUST implement:  default wallet is 'My Wallet', but it may be changed
  /wallet/:
    get:
      summary: Enumerate the names of existing wallets
      tags:
        - wallet
      responses:
        '200':
          description: The enumeration of the names of existing wallets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /wallet/{name}/create:
    post:
      tags:
        - wallet
      summary: Create wallet
      parameters:
        - name: name
          in: path
          description: |-
            Name of wallet to create
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Wallet created 
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    description: |-
                      Public address of the newly created wallet
                    type: string
        '409':
          description: Wallet already exists
  /wallet/{name}:
    tags:
      - wallet
# MUST implement          
    get:
      description: Summarize information about a wallet
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Information about the wallet
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    description:
                      The total balance of coin in the wallet
                    type: integer
    delete:
      summary: Delete wallet
      parameters:
        - name: name
          in: path
          description: The name of the wallet to delete
          schema:
            type: string
      responses:
        '200':
          description: 
            The named wallet was successfully deleted
        '404':
          description: 
            The named wallet does not exist
# MUST implement            
  /wallet/{name}/rename:
    post:
      summary: Change the wallet name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: New wallet name
                  type: string
      response:
        200:
          description: Wallet successfully renamed
        400:
          description: Invalid wallet name
# MUST implement          
  /wallet/{name}/password:
    get:
      summary: Get the wallet password; empty string if no passphase set
      parameters:
        - name: name
          in: path
          required: true
          type: string
      response:
        content:
          application/json:
            type: object
            properties:
              password:
                type: string
    put:
      summary: Set the wallet password
      parameters:
        - name: name
          in: path
          required: true
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
# MUST implement          
  /wallet/{name}/phrase:
    get:
      summary: Get the wallet recovery passphrase
      parameters:
        - name: name
          in: path
          required: true
          type: string
# MUST implement          
  '/wallet/{name}/address/{address}/transaction/':
    get:
      tags:
        - wallet
      summary: Enumerate wallet transactions
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: address
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: An enumeration of all transaction ids for wallet
          content:
            application/json:
              schema:
                type: array
                properties:
                  totalTransactions:
                    type: integer
                  transactionIds:
                    type: array
                    items:
                      type: string  
  '/wallet/{name}/address/{address}/transaction/{id}':
    get:
      tags:
        - wallet
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: address
          in: path
          required: true
          type: integer
        - name: id
          in: id
          required: true
          type: integer
      responses:
        '200':
          description: Information about a given transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
        '404':
          description: No such transaction
  '/wallet/{name}/address':
    post:
      tags:
        - wallet
      summary: generate new address
      operationId: generateAddress
      produces:
        - application/json
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        '201':
          description: A new address has been created
          schema:
            type: object
            properties:
              address:
                type: string
# MUST implement
  '/wallet/{name}/address/':
    get:
      tags:
        - wallet
      summary: Get all addresses associated with a wallet
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Array of addresses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  '/wallet/{name}/address/{address}':
    get:
      tags:
        - wallet
      summary: Get information about an address within a wallet
      operationId: getAddressStatus
      produces:
        - application/json
      parameters:
        - name: name
          description: Name of wallet 
          in: path
          required: true
          type: string
        - name: address
          description: Address for information in wallet
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              status:
                description: Whether this address has ever been used in the blockchain
                type: string
                enum:
                  - USED
                  - UNUSED
              amount:
                type: integer
  '/wallet/{name}/address/{address}/transaction':
    post:
      tags:
        - transaction
      summary: Submit transaction to blockchain
      operationId: createTransaction
      requestBody:
        description: Parameters for transaction
        required: true
        content:
          application/json:
            schema:
              type: array
              properties:
                schema:
                  type: object
                  properties:
                    address:
                      description: Address to pay amount
                      type: string
                    amount:
                      description: Amountto pay this address
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - in: address
          name: body
          required: true
          type: string
      responses:
        '201':
          description: The transaction has been succesfully submitted
          schema:
            items:
              $ref: '#/components/schema/transaction'
  /wallet/{name}/restore:
    post:
      summary: Restore wallet from recovery phrase
      tags:
        - wallet
      requestBody:
        description: Phrase to be used to restore wallet
        required: true
        content:
            application/json:
              schema:
                type: array 
                items:
                  word:
                    type: string
      responses:
        '200':
          content:
            description: Success
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
        '409':
          description: Wallet already exists
  /dictionary/:
    get:
      tags:
        - dictionary
      summary: Return available recovery phrase dictionaries by language
      produces:
        - application/json
      responses:
        '200':
          schema:
            type: array
            items:
              type: string
  '/dictionary/{language}':
    get:
      tags:
        - dictionary
      operationId: getDictionary
      parameters:
        - name: language
          in: path
          required: true
          type: string
      responses:
        '200':
          content:
            description: Return the 2048 word dictionary
            application/json:
              type: array
              items:
                type: string
components:
  schemas:
    consensus:
      type: object
      properties:
        epoch:
          description: The number of the last sealed block (aka the current chain height)
          type: integer
        latestLocalEpoch:
          description: The highest number of locally synchronized contiguous blocks
          type: integer
        synced:
          description: Whether the connected node is synced with the chain
          type: boolean
    transaction:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: integer
          format: int64
        inputs:
          type: array
          items:
            type: object
            properties:
              cloaked:
                type: boolean
              address:
                type: string
              amount:
                type: integer
        outputs:
          type: array
          items:
            type: object
            properties:
              cloaked:
                type: boolean
              address:
                type: string
              amount:
                type: integer
