openapi:  3.0.1
info:
  title: Emotiq Wallet interface
  version: 0.0.2
tags:
  - name: consensus
  - name: wallet
  - name: transaction
  - name: dictionary
paths:
  /consensus/:
    get:
      tags:
        - consensus
      summary: >-
        Returns information about current chain consensus with the connected
        node
      responses:
        '200':
          description: Consensus information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consensus'
  /wallet/:
    get:
      tags:
        - wallet
      description: Enumerate the names of existing wallets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /wallet/{name}/create:
    post:
      tags:
        - wallet
      summary: Create wallet
      parameters:
        - name: name
          in: path
          description: |-
            Name of wallet to create
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    description: |-
                      Public address of the newly created wallet
                    type: string
        '409':
          description: Wallet already exists
  /wallet/{name}:
    delete:
      tags:
        - wallet
      summary: Delete wallet
      parameters:
        - name: name
          in: path
          description: The name of the wallet to delete
          schema:
            type: string
      responses:
        '200':
          description: |-
            The named wallet was successfully deleted
        '404:
          description: |-
            The named wallet does not exist
  /wallet/{name}/restore:
    post:
      tags:
        - wallet
      operationId: restoreWallet
      requestBody:
        description: Phrase to be used to restore wallet
        required: true
        content:
            application/json:
              type: object
              properties:
                recoveryPhrase:
                  type: string
      responses:
        '200':
          content:
            description: Success
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
        '409':
          description: Wallet already exists
  '/wallet/{name}/{address}':
    get:
      tags:
        - wallet
      summary: Get balance for wallet address
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: address
          in: path
          required: true
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: integer
  '/wallet/{address}/transactions/':
    get:
      tags:
        - wallet
      summary: List wallet transactions
      operationId: getWalletTransactions
      parameters:
        - name: address
          in: path
          required: true
          type: string
        - name: limit
          in: query
          type: integer
        - name: offset
          in: query
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalTransactions:
                    type: integer
                  offset:
                    type: integer
                  windowSize:
                    type: integer
                  type: array
                  items:
                    $ref: '#/components/schemas/transaction'
  '/wallet/{name}/':
    post:
      tags:
        - wallet
      summary: generate new address
      operationId: generateAddress
      produces:
        - application/json
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              address:
                type: string
  '/wallet/{name}/address/':
    get:
      tags:
        - wallet
      summary: get all addresses
      operationId: getAllAddresses
      produces:
        - application/json
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              type: string
  '/wallet/{name}/{address}':
    get:
      tags:
        - wallet
      summary: Get information about an ADDRESS contained with NAME
      operationId: getAddressStatus
      produces:
        - application/json
      parameters:
        - name: name
          description: Name of wallet 
          in: path
          required: true
          type: string
        - name: address
          description: Address for information in wallet
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                  - USED
                  - UNUSED
  '/wallet/{name}/{address}/transaction':
    post:
      tags:
        - transaction
      summary: Create transaction and submit to blockchain
      operationId: createTransaction
      requestBody:
        description: Parameters for transaction
        required :true
        content:
          application/json:
            schema:
              type: array
              properties:
                schema:
                  type: object
                  properties:
                    address:
                      description: Address to pay amount
                      type: string
                    amount:
                      description: Amountto pay this address
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - in: address
          name: body
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            items:
              $ref: '#/components/schema/transaction'
        '400':
          description: Invalid status value
  /dictionary/:
    get:
      tags:
        - dictionary
      summary: Return available phrase dictionaries by language
      operationId: getDictionaries
      produces:
        - application/json
      responses:
        '200':
          schema:
            type: array
            items:
              type: string
  '/dictionary/{language}':
    get:
      tags:
        - dictionary
      operationId: getDictionary
      parameters:
        - name: language
          in: path
          required: true
          type: string
      responses:
        '200':
          content:
            description: Return the 2048 word
            application/json:
              type: array
              items:
                type: string
components:
  schemas:
    consensus:
      type: object
      properties:
        epoch:
          description: The number of the last sealed epoch
          type: integer
        synced:
          description: Whether the connected node is synced with the chain
          type: boolean
    transaction:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: integer
          format: int64
        inputs:
          type: array
          items:
            type: object
            properties:
              cloaked:
                type: boolean
              address:
                type: string
              amount:
                type: integer
        outputs:
          type: array
          items:
            type: object
            properties:
              cloaked:
                type: boolean
              address:
                type: string
              amount:
                type: integer
